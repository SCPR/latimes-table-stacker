<pre><code> ,ggggggggggggggg                                        ,gg,                                                                
dP""""""88"""""""       ,dPYb,      ,dPYb,              i8""8i     I8                          ,dPYb,                        
Yb,_    88              IP'`Yb      IP'`Yb              `8,,8'     I8                          IP'`Yb                        
 `""    88              I8  8I      I8  8I               `88'   88888888                       I8  8I                        
        88              I8  8'      I8  8'               dP"8,     I8                          I8  8bgg,                     
        88    ,gggg,gg  I8 dP       I8 dP   ,ggg,       dP' `8a    I8      ,gggg,gg    ,gggg,  I8 dP" "8   ,ggg,    ,gggggg, 
        88   dP"  "Y8I  I8dP   88gg I8dP   i8" "8i     dP'   `Yb   I8     dP"  "Y8I   dP"  "Yb I8d8bggP"  i8" "8i   dP""""8I 
  gg,   88  i8'    ,8I  I8P    8I   I8P    I8, ,8I _ ,dP'     I8  ,I8,   i8'    ,8I  i8'       I8P' "Yb,  I8, ,8I  ,8'    8I 
   "Yb,,8P ,d8,   ,d8b,,d8b,  ,8I  ,d8b,_  `YbadP' "888,,____,dP ,d88b, ,d8,   ,d8b,,d8,_    _,d8    `Yb, `YbadP' ,dP     Y8,
     "Y8P' P"Y8888P"`Y88P'"Y88P"'  8P'"Y88888P"Y888a8P"Y88888P" 88P""Y88P"Y8888P"`Y8P""Y8888PP88P      Y8888P"Y8888P      `Y8</code></pre>

Publish CSV files as interactive tables using "TableFu":https://github.com/eyeseast/python-tablefu, "TableSetter":https://github.com/propublica/table-setter, "Django":http://www.djangoproject.com/, "jQuery":http://jquery.com/ and "Google App Engine":http://code.google.com/appengine/.

You can see an example table working "here":http://table-stacker.appspot.com/example_formatted/.

Beware. This software is in beta testing and hasn’t been used much. But don’t let that stop you! Please try it and tell me what sucks.

All of the good stuff in here was written by "ProPublica's News Application Desk":http://www.propublica.org/nerds and "Chris Amico":http://www.chrisamico.com/blog/. Blame me for whatever sucks.

h2. Features

* Convert a CSV file into an interactive HTML table using a simple YAML config file
* Do it over and over again without much trouble
* Quickly publish your tables to Google App Engine and serve them on the web for free

h2. Instructions

h3. 01. Register a new application with Google App Engine.

Go to "https://appengine.google.com/":https://appengine.google.com/ and follow their instructions.

h3. 02. Clone the code from this repository to your development machine

I like to put things in a virtualenv like this.
<pre><code>$ virtualenv --no-site-packages table-stacker
$ cd table-stacker
$ git clone git://github.com/datadesk/latimes-table-stacker.git project
$ cd project</code></pre>

h3. 03. Configure the apps.yaml file with your Google App Engine application id

<pre><code>application: your-app-id-here</code></pre>

h3. 04. Open a second terminal tab and fire up the development server

You'll see me using python2.5, since that's what Google App Engine requires.
<pre><code>$ python2.5 manage.py runserver</code></pre>

h3. 05. Load the example table

If you want to peek under the hood and see how it works, check out the YAML file in the tables directory.
<pre><code>python manage.py loadtable example_formatted --host=localhost:8000</code></pre>
You'll be asked to log in with your Google App Engine credentials, don't worry. That's what's supposed to happen.

h3. 06. Check http://localhost:8000/ in your browser

You should see our demo table, ready to serve.

h3. 07. Upload your app to appspot.com

<pre><code>$ python2.5 manage.py update</code></pre>

h3. 08. Load the demo recipe to your live site

Notice how you leave out the host option this time. These commands hit your live site by default.
<pre><code>python2.5 manage.py loadtable example_formatted</code></pre>

h3. 09. Check out your site! 

You should find it at http://your-app-id-here.appspot.com You might draw Django errors for a few minutes as the app builds its indexes, but don't worry. It'll be ready after you have a cup of coffee.







